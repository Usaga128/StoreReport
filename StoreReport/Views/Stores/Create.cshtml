@model StoreReport.Models.Store

@{
    ViewData["Title"] = "Agregar tienda";
}


<h2>Información de la tienda.</h2>
<hr />
<div class="row">
    <div class="col-md-4" style="width:100%;">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label">Nombre</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactName" class="control-label">Nombre del contacto</label>
                <input asp-for="ContactName" class="form-control" />
                <span asp-validation-for="ContactName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label">Teléfono</label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label">Dirección</label>
                <textarea asp-for="Address" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <input id="pac-input" class="search" type="text" placeholder="Buscar">
            <label asp-for="Address" class="control-label">Geolocalización</label>
            <textarea asp-for="GeoAddress" id="GeoAddress" class="form-label" hidden></textarea>


            <div id="map" style="width:100%;height:400px;"></div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <label class="control-label" for="inputGroupSelect01">Estado</label>
                </div>
                <select asp-for="Status" class="custom-select" id="inputGroupSelect01">
                    <option value="1">Activo</option>
                    <option value="2">Inactivo</option>
                </select>
            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <label class="control-label" for="inputGroupSelect01">Franquicia</label>
                </div>


                @{
                    SelectList list = new SelectList(new List<SelectListItem>());
                    list = ViewBag.StoreList;

                }

                @Html.DropDownList("FranchiseID", list)


            </div>
            <div class="form-group">
                <br>
                <input type="submit" value="Agregar tienda" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>
 <div>
<a asp-action="Index">Retornar a la lista</a>
</div>

<script>
    // This example adds a search box to a map, using the Google Place Autocomplete
    // feature. People can enter geographical searches. The search box will return a
    // pick list containing a mix of places and predicted search terms.

    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCEzaIaT6MRaOyrSpxruyCfXes7OqXbTNs&libraries=places">

    function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 9.9355633, lng: -84.1086137 },
            zoom: 16,
            mapTypeId: 'roadmap'
        });

        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function () {
            searchBox.setBounds(map.getBounds());
        });


        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function () {
            var places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }

            // Clear out the old markers.
            markers.forEach(function (marker) {
                marker.setMap(null);
            });
            markers = [];

            // For each place, get the icon, name and location.
            var bounds = new google.maps.LatLngBounds();
            places.forEach(function (place) {
                if (!place.geometry) {
                    console.log("Returned place contains no geometry");
                    return;
                }
                var icon = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                markers.push(new google.maps.Marker({
                    map: map,
                    icon: icon,
                    title: place.name,
                    position: place.geometry.location
                }));


                document.getElementById("GeoAddress").value = place.geometry.location;


                //alert(place.geometry.location);

                if (place.geometry.viewport) {
                    // Only geocodes have viewport.
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }
            });
            map.fitBounds(bounds);
        });
    }

</script>

@*La sabana 9.9355633,-84.1086137*@

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCEzaIaT6MRaOyrSpxruyCfXes7OqXbTNs&libraries=places&callback=initAutocomplete"
        async defer></script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
