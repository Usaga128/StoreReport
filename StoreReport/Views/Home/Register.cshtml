<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/css/bootstrap-select.min.css" rel="stylesheet" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/js/bootstrap-select.min.js"></script>

<h4>
    @{

        ViewData["Title"] = "Registrar Producto";

    }
</h4>
<h4>@ViewData["Title"]</h4>
<h4>@ViewData["Message"]</h4>
<br />

<script type="text/javascript" language="javascript">
    $('.selectpicker').selectpicker({
        style: 'btn-info',
        size: 4
    });

    function coordenadas(position) {
        var lat = position.coords.latitude;
        var lon = position.coords.longitude;

    }


    function SetData() {

        var reporouteid = document.getElementById('RouteID');
        var repostoreid = document.getElementById('StoreID');
        var repoitemid = document.getElementById('ItemID');
        var reposumupcheckscount = document.getElementById('sumupcheckscount');
        var repocomment = document.getElementById('comment');


        var resumenrouteid = document.getElementById('resumenrouteid');
        var resumenstoreid = document.getElementById('resumenstoreid');
        var resumenproductid = document.getElementById('resumenproductid');
        var resumencomment = document.getElementById('resumencomment');
        var resumendate = document.getElementById('resumendate');
        var resumenchecks = document.getElementById('sumupcheckquest');
        var resumencheckslbl = document.getElementById('checks');



        resumenrouteid.innerHTML = reporouteid.options[reporouteid.selectedIndex].text;
        resumenstoreid.innerHTML = repostoreid.options[repostoreid.selectedIndex].text;
        resumenproductid.innerHTML = repoitemid.options[repoitemid.selectedIndex].text;
        resumencomment.value = repocomment.value;
        var now = new Date();
        var options = { year: 'numeric', month: 'long', day: 'numeric' };

        resumendate.innerHTML = now.toLocaleDateString("es-ES", options);

        //alert(reporouteid.options[reporouteid.selectedIndex].text);
        //alert(repostoreid.options[reporouteid.selectedIndex].text);
        //alert(repoitemid.options[reporouteid.selectedIndex].text);
        //alert(repoichecklist.value);
        //alert(repocomment.value);

        var i;
        var repoitemsumup = "";
        var questarr = resumenchecks.value.split(",");


        for (i = 0; i < reposumupcheckscount.value; i++) {
            var currentCheckResponse = document.getElementById(i + 1);
            var valor = "No";
            if (currentCheckResponse.checked) {
                var valor = "Si";
            }
            repoitemsumup = repoitemsumup + (i + 1) + "-" + questarr[i] + "," + valor + "<br>";

        }
        repoitemsumup = repoitemsumup.substring(0, repoitemsumup.length - 1);

        resumencheckslbl.innerHTML = repoitemsumup;


        var canvas = document.getElementById('canvas');
        var dataURL = canvas.toDataURL();
        var img = new Image;
        img.src = dataURL;


    }
</script>



<title>Visita.</title>


<div class="container">

 
    <div>
        <div>

            <br>
            <label for="codReportLabel">Usuario: @User.Identity.Name</label> <br>

            @{
                SelectList routelist = new SelectList(new List<SelectListItem>());
                routelist = ViewBag.routelist;

            }
            @Html.DropDownList("RouteID", routelist, new { @class = "selectpicker" })



            <br>

            @{
                SelectList list = new SelectList(new List<SelectListItem>());
                list = ViewBag.Storelist;

            }

            @Html.DropDownList("StoreID", list, new { @class = "selectpicker" })


            <br>

            @{
                SelectList itemlist = new SelectList(new List<SelectListItem>());
                itemlist = ViewBag.itemlist;

            }

            @Html.DropDownList("ItemID", itemlist, new { @class = "selectpicker" })


        </div>
    </div>

    @{
        SelectList checklist = new SelectList(new List<SelectListItem>());
        checklist = ViewBag.checklist;
        String vCheckID = "";
        int vCount = 0;
        string vQuest = "";
        foreach (var item in checklist)
        {
            <label style="margin:10px;" for="check@item.Value">@item.Text</label> @Html.Label("Si") <input type="checkbox" id="@item.Value" value="">
            <br />

            vCheckID = vCheckID + @item.Value + ",";
            vQuest = vQuest + @item.Text + ",";
            vCount++;

        }
        <input id="sumupcheckscount" name="counter" type="hidden" value="@vCount">
        <input id="sumupcheckquest" name="counter" type="hidden" value="@vQuest.Substring(0,vQuest.Length-1)">
    }



    <div style="margin:5px;">

        <label for="comment">Comentario:</label>
        <textarea style="margin:5px;" class="form-control" rows="2" id="comment"></textarea>


        <label for="sel1">Fotografía:</label>

        <div class="divTableCell">
            <video id="video" width="240" height="240" autoplay class="centercontrols"></video>
            <button id="snap" class="btn btn-success centercontrols" data-toggle="modal" data-target="#myModal" onclick="SetData()">Enviar reporte</button>
            <button id="snap" class="btn btn-success centercontrols" data-toggle="modal" data-target="#myModal" onclick="SetData()">Historial</button>
        </div>


    </div>
</div>

<div class="container">


    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h2>Reporte enviado exitosamente.</h2><br />

                    <pa>

                        <label style="margin:5px" id="resumendate"></label>  <br />

                        <label style="margin:5px" id="resumenrouteid"></label>  <br />

                        <label style="margin:5px" id="resumenstoreid"></label>  <br />

                        <label style="margin:5px" id="resumenproductid"></label>  <br />

                        <label style="margin:5px" id="checks"></label>  <br />

                        <input type="text" rows="5" readonly id="resumencomment" class="form-control" style="color:black"> <br />

                    </pa>
                    <h2>Fotografía</h2>
                </div>
                <div class="modal-body">
                    <div class="divTableRow">
                        <div class="divTableCell">

                            <canvas id="canvas" width="240" height="240" class="centercontrols"></canvas>
                        </div>

                    </div>

                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>

                </div>




            </div>


        </div>
    </div>
</div>

<script>
    // Put event listeners into place
    window.addEventListener("DOMContentLoaded", function () {
        // Grab elements, create settings, etc.
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');
        var video = document.getElementById('video');
        var mediaConfig = { video: true };
        var errBack = function (e) {
            console.log('An error has occurred!', e)
        };

        // Put video listeners into place
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            navigator.mediaDevices.getUserMedia({
                video: true
            })
                .then(function (stream) {
                    video.srcObject = stream;
                })
                .catch(function (error) {
                    console.log('error', error);
                });

        }



        /* Legacy code below! */
        else if (navigator.getUserMedia) { // Standard
            navigator.getUserMedia(mediaConfig, function (stream) {
                video.src = stream;
                video.play();
            }, errBack);
        } else if (navigator.webkitGetUserMedia) { // WebKit-prefixed
            navigator.webkitGetUserMedia(mediaConfig, function (stream) {
                video.src = window.webkitURL.createObjectURL(stream);
                video.play();
            }, errBack);
        } else if (navigator.mozGetUserMedia) { // Mozilla-prefixed
            navigator.mozGetUserMedia(mediaConfig, function (stream) {
                video.src = window.URL.createObjectURL(stream);
                video.play();
            }, errBack);
        }

        // Trigger photo take
        document.getElementById('snap').addEventListener('click', function () {
            context.drawImage(video, 25, 0, 240, 200);
        });
    }, false);
     

</script>

